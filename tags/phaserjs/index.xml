<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phaserjs on 頑張らないために頑張る</title>
    <link>https://ysko909.github.io/tags/phaserjs/</link>
    <description>Recent content in Phaserjs on 頑張らないために頑張る</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© Copyright ysko</copyright>
    <lastBuildDate>Sun, 25 Feb 2024 23:19:55 +0900</lastBuildDate>
    
	<atom:link href="https://ysko909.github.io/tags/phaserjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>時計が読めない幼児でも朝のルーティンをスムーズに！Phaser.jsを使ったルーティンタイマーの作成</title>
      <link>https://ysko909.github.io/posts/make-a-routine-time-with-phaser-js/</link>
      <pubDate>Sun, 25 Feb 2024 23:19:55 +0900</pubDate>
      
      <guid>https://ysko909.github.io/posts/make-a-routine-time-with-phaser-js/</guid>
      <description>はじめに 朝のルーティンは、時計が読める大人でもなかなか上手くこなすのは難しいものです。これが時計がまだ読めない幼児の場合だと、ルーティンをこなすのが一層困難になるでしょう。そこで、JavaScript（以下、JS）とJSのゲームライブラリであるPhaser.jsを使ったルーティンタイマーを作成することで、時計が読めない子供でもスムーズに朝のルーティンをこなせるようにしたケースを紹介します。
いきさつ 始まりは、実家に帰省した際に弟（既婚、子持ち）から聞いた「子供が朝のルーティンを上手くこなせない」という話です。
弟「子供が全然登園準備できなくて、朝が超忙しい。」 俺「何歳だっけ？5歳？」 弟「そうそう。一応、自力で着替えも食事もできるはずなんだけど。」 俺「オメーとかが見てやればいいんじゃね？」 弟「オレもヨメさんも朝出るのが早いから、ずっとは見てやれないんだよ」 俺「んじゃ、その1人になったタイミングでボーっとしちゃうわけか」 弟「そうそう。」 俺「5歳じゃ時計読めないだろうから、XXXXってテレビ番組が始まったら着替え開始！って指示するのとかは？」 弟「もう試した。テレビをずっと見ちゃってダメだった。」 俺「うーん、じゃあアラームアプリ入れてスマホ持たせ・・・たらもっとダメだな。それこそずっと遊んでそうだ」 弟「そうなんだよねー。まだひらがなもちょっとしか読めないし、文字で指示するようなやつはダメだね」 俺「Amazonのアレクサとか、ああいうスマートスピーカーは？アラーム機能使って喋らせればいいんじゃね？」 弟「そんなんウチないもん」 俺「そうかぁ(´・ω・｀)」 彼の子はまだ時計が読めないため、出かけるまでどのくらい時間があるのかわからない状態です。その結果、朝食をゆっくり食べすぎてしまい、着替えや歯磨きなどの準備に手間取ってしまう模様。そのため、弟夫婦はそれを急かす形で厳しい表情をすることも多いようです。まぁ無理もないよね、朝は誰でも忙しい時間帯だし。なお、ひらがなやカタカナは勉強中のようで、読めたり読めなかったりする模様。
ちなみに、朝はテレビのリモコンを子供の手が届かないところに置いているそうです。なんでも、リモコンは使い方をなんとなく覚えているそうで、EテレとかYouTubeアプリを起動したりして勝手に見始めちゃうとか。すごいな5歳児。
課題 ここで解決すべき課題を整理します。
 時計が読めないため、あとどのくらい猶予があるかわからない。 両親が見ておらず子供が1人で食事するタイミングがあり、その間は指示できない。 まだ満足に読めないため、文字で指示されても理解が難しい。 そのため音声で指示できればいいが、自宅にスマートスピーカーがない。  まぁ、小さい子がいるご家庭あるあるじゃないかなーと思います。あるあるだよね？次は、これらの課題をクリアするための方法を検討します。
解決方針 先ほど挙げた課題をどう解決するか、方針を具体的に考えてみましょう。
 ルーティンタイマーの作成：朝のルーティンをスムーズにこなせるようなタイマーを作成します。ただし、前述の通り普通に大人と同様の仕様でタイマーを実装すると、子供にはわかりにくいでしょう。そのため、子供向けの対策を用意する必要があります。 タスクの可視化：朝食や歯磨き、着替えなどの実行時にオプションタスクをすべて表示します。「これらのタスクをすべて完了すればOK！」という、朝のルーティンにおける明確なゴールを表現します。 簡単な指示の表示：タスクには、文字だけでなく、イラストやアイコンなどを使ってもわかりやすく表示します。保育園児がまだ文字を完全に理解できない場合でも、イラストで指示を理解できるようにします。 タスク消化を促す：子供が1人でタスクをこなせるよう働きかけます。また、画面操作ではなくタスクの消化を優先させるため、誰かが操作しなくても自動で画面更新される仕組みとします。  これらを実現することが解決の方針です。これにより、時計が読めない子供でも1人で朝のルーティンをスムーズにこなせるようになるでしょう。なるんじゃないかな。なるといいな。
既存のアプリは使えるのか 「そもそも作らなくても既存であるんじゃない？」とお思いでしょう。自分もそう思いました。なので、世のルーティンタイマーアプリをざっくり調べてみましたが、経過時間をプログレスバーや円弧が伸びることで表現するものがありました。この方法を使えば、残り時間の表現はできそうです。
ただ、さすがに音声で案内をしてくれるものは発見できませんでした。実行すべき行動の指示については、文字で指示したところで子供は読めないので、音声が無理ならイラストなどを使ってわかりやすく表現するしかなさそうです。が、ユーザーがアイコンを任意に設定できるアプリは見つけられませんでした。
まぁ、スマホのようなデバイスを幼児が使うような想定はしてないわけで、既存でアプリでどうにかするのは無理があります。そもそも、デバイスをむやみに触らせることは、あまり勧められたものではないでしょう。実際の功罪はともかく、少なくともベネフィットよりリスクのほうが高そう、というようにここでは判断しました。
そのため、「既存でないなら作るしかないよね」という結論になります。しょうがない、作るかー。
実装方法方法 解決方針は決まりました。作ります。あとはどのように実装するかです。
結論から言えば、Phaser.jsを活用して、ルーティンタイマーを作成する方向で実装します。
ルーティンタイマーとはなんぞや まぁここまででたくさん言及しましたが、改めて定義しておきましょう。
ルーティンタイマーは、朝のルーティンの各タスクごとに制限時間を設定し、タイマーが経過すると次のステップに進む仕組みです。例えば、朝食の時間を10分、着替えの時間を5分と設定することで、自分の進捗状況をタイマーで確認しながらルーティンを進めることができます。タイマーが経過した場合には、次のタスクへ自動的に進むことで、タスクの進行具合を確認しながらスムーズなルーティンの実行が可能となります。
ルーティンタイマーを実装することで、以下の課題を解消することが期待できます。
 朝の準備をスムーズに行うための時間配分の目安が欲しい 視覚的にどのくらい時間が経過したかが一目でわかるUIが必要 タスクごとに個別の時間を設定したい 準備にかかる時間のゆとりを視覚的に示したい 準備に遅れている場合はそれが一目でわかる演出が必要  なお、タスクは画面に一覧表示する方法と、現在のタスクのみを表示する方法があります。今回はタスク自体が少ないことから、一覧表示するものとしました。実行すべきタスクがすべて表示されていることで残りのタスクが明確になるから、という理由もあります。最初からすべて出てる方が、どんどん小出しにされるよりゴールが明確になっていいよね、という判断です。
どんなUIにしようか 結論から言うと、イラストとプログレスバーによる表現を採用しました。
ユーザーインターフェース（以下、UI）のデザインは、幼児たちにとってわかりやすいUIを実装することが大切です。少なくとも文字を多用したUIはどうにもならない、ということはわかって頂けると思います。そりゃそうです、だって読めないんだもん。じゃあどうするかというと、文字以外でどうにかするしかないわけですね。
タスクはイラストで表現 タスクの表現はイラストを多用することで、幼児たちが直感的に理解できるようになります。例えば、朝ごはんの時間では、食事をしている人のイラストを表示することで、何をするべきかをわかりやすく伝えることができます。また、歯磨きの時間では、歯ブラシや歯磨き粉のイラストを表示することで、何を使って何をするべきかを示すことができます。
時間経過はプログレスバーで表現 時間の経過は、文字による時間表記ではなく、プログレスバーなどの表現を採用します。幼児たちはまだ時計を読むことが難しいため、具体的な時間の表記よりも、時間がどれくらい経過したかを視覚的に理解しやすい方法が求められます。プログレスバーは、時間が経つにつれてゆっくりと進んでいくため、幼児たちに時間の経過を感じさせることができます。
また、あるタスクの消化率が100%となった場合、プログレスバーをグレーなどの色に変更することで「そのタスクに割り当てられた時間は終了した」ということを明確に表現します。
どう実装するか ルーチンタイマーのアプリケーションを作成する際には、前述のとおりUIの設計が重要です。幼児向けのアプリケーションでは、直感的で使いやすいUIが求められます。さらに、自動的に画面がリフレッシュされる機能も必要です。
これらを実装するため、ここではPhaser.jsを利用します。Phaser.jsはJavaScriptのライブラリであり、ゲーム開発に特化しています。しかし、その柔軟性や即時性を活かして、ゲームに限らずアプリケーションを実装することも可能です。</description>
    </item>
    
  </channel>
</rss>